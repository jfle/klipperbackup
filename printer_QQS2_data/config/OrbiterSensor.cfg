# Orbiter v2.0 Filament Sensor Configuration for Klipper (Optimized for high accel delta)

[filament_switch_sensor orbiter_sensor]
switch_pin: ^!PA1            # Replace with your actual sensor pin
pause_on_runout: False       # Handled in macro
debounce_time: 100           # Increased debounce to 100 ms for vibration filtering
triggered_only: True         # Only trigger on filament runout event
runout_gcode:
    RUNOUT_HANDLER
runout_clear_gcode:
    RUNOUT_CLEAR_HANDLER

# ====================
# Macro: RUNOUT_HANDLER
# ====================
[gcode_macro RUNOUT_HANDLER]
variable_last_runout_time: 0
description: Handles filament runout event safely with software debounce
gcode:
    {% set now = printer.time %}
    {% if (now - printer['gcode_macro RUNOUT_HANDLER'].variable_last_runout_time) < 5 %}
        M118 Ignoring runout (within software debounce window)
        RESPOND PREFIX="runout" MSG="Ignored runout due to software debounce"
        ABORT
    {% endif %}
    SET_GCODE_VARIABLE MACRO=RUNOUT_HANDLER VARIABLE=variable_last_runout_time VALUE={now}

    M118 Runout handler triggered at position X:{printer.toolhead.position.x} Y:{printer.toolhead.position.y} Z:{printer.toolhead.position.z}

    {% if printer.idle_timeout.state != "Printing" %}
        M118 Runout triggered, but not printing.
        RESPOND PREFIX="runout" MSG="Runout ignored (not printing)"
        SET_FILAMENT_STATUS NOFILAMENT=1
        ABORT
    {% endif %}
    {% if printer.pause_resume.is_paused %}
        M118 Runout triggered while already paused.
        RESPOND PREFIX="runout" MSG="Runout ignored (already paused)"
        ABORT
    {% endif %}
    SET_FILAMENT_STATUS NOFILAMENT=1
    PAUSE
    RESPOND PREFIX="runout" MSG="Runout detected and PAUSE issued"

# =========================
# Macro: RUNOUT_CLEAR_HANDLER
# =========================
[gcode_macro RUNOUT_CLEAR_HANDLER]
description: Handles filament reloaded event (runout cleared)
gcode:
    SET_FILAMENT_STATUS NOFILAMENT=0
    RESPOND PREFIX="runout" MSG="Filament reloaded, resuming print"
    RESUME

# =========================
# Macro: SET_FILAMENT_STATUS
# =========================
[gcode_macro SET_FILAMENT_STATUS]
description: Sets internal state for filament (used in logic)
variable_NOFILAMENT: 0
gcode:
    {% set newstate = params.NOFILAMENT|int %}
    SET_GCODE_VARIABLE MACRO=SET_FILAMENT_STATUS VARIABLE=NOFILAMENT VALUE={newstate}

# ====================
# Macro: LOAD_FILAMENT
# ====================
[gcode_macro LOAD_FILAMENT]
description: Load filament manually into extruder
gcode:
    M118 Loading filament...
    G91
    G1 E40 F300  ; push filament gently
    G90
    SET_FILAMENT_STATUS NOFILAMENT=0
    M118 Filament loaded successfully.

# ====================
# Macro: UNLOAD_FILAMENT
# ====================
[gcode_macro UNLOAD_FILAMENT]
description: Unload filament from extruder
gcode:
    M118 Unloading filament...
    G91
    G1 E-60 F900 ; retract fully
    G90
    SET_FILAMENT_STATUS NOFILAMENT=1
    M118 Filament unloaded successfully.

# ====================
# Macro: FILAMENT_PRESENT
# ====================
[gcode_macro FILAMENT_PRESENT]
description: Manually set filament as present (if sensor fails or is bypassed)
gcode:
    SET_FILAMENT_STATUS NOFILAMENT=0
    RESPOND PREFIX="sensor" MSG="Filament manually marked as present."

# ====================
# Macro: FILAMENT_NOT_PRESENT
# ====================
[gcode_macro FILAMENT_NOT_PRESENT]
description: Manually set filament as missing
gcode:
    SET_FILAMENT_STATUS NOFILAMENT=1
    RESPOND PREFIX="sensor" MSG="Filament manually marked as missing."

# ====================
# Macro: CHECK_FILAMENT
# ====================
[gcode_macro CHECK_FILAMENT]
description: Checks if filament is present before print
gcode:
    {% if printer.idle_timeout.state == "Printing" %}
        M118 Filament check skipped during print.
    {% elif SET_FILAMENT_STATUS.NOFILAMENT == 1 %}
        RESPOND PREFIX="filament" MSG="No filament detected before print. Aborting."
        ABORT
    {% else %}
        M118 Filament present, proceeding...
    {% endif %}
